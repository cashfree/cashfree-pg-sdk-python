# coding: utf-8

"""
    Cashfree Payment Gateway APIs

    Cashfree's Payment Gateway APIs provide developers with a streamlined pathway to integrate advanced payment processing capabilities into their applications, platforms and websites.

    The version of the OpenAPI document: 2023-08-01
    Contact: developers@cashfree.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import Optional
from pydantic import BaseModel, Field, StrictStr, validator

class OrderDeliveryStatus(BaseModel):
    """
    Order delivery Status associated with order.
    """
    status: StrictStr = Field(..., description="Delivery status of order")
    reason: Optional[StrictStr] = Field(None, description="Reason of provided order delivery status. This is optional field.")
    __properties = ["status", "reason"]

    @validator('status')
    def status_validate_enum(cls, value):
        """Validates the enum"""
        if value not in ('AWAITING_PICKUP', 'CANCELLED', 'SELF_FULFILLED', 'PICKED_UP', 'SHIPPED', 'IN_TRANSIT', 'DELAY_COURIER_COMPANY_ISSUES', 'DELAY_INCORRECT_ADDRESS', 'DELAY_SELLER_ISSUES', 'REACHED_DESTINATION_HUB', 'OUT_FOR_DELIVERY', 'DELIVERED', 'POTENTIAL_RTO_DELIVERY_ATTEMPTED', 'RTO', 'LOST', 'DAMAGED', 'UNTRACKABLE_404', 'MANUAL_INTERVENTION_BROKEN_URL', 'ASSOCIATED_WITH_RETURN_PICKUP', 'UNSERVICEABLE'):
            raise ValueError("must be one of enum values ('AWAITING_PICKUP', 'CANCELLED', 'SELF_FULFILLED', 'PICKED_UP', 'SHIPPED', 'IN_TRANSIT', 'DELAY_COURIER_COMPANY_ISSUES', 'DELAY_INCORRECT_ADDRESS', 'DELAY_SELLER_ISSUES', 'REACHED_DESTINATION_HUB', 'OUT_FOR_DELIVERY', 'DELIVERED', 'POTENTIAL_RTO_DELIVERY_ATTEMPTED', 'RTO', 'LOST', 'DAMAGED', 'UNTRACKABLE_404', 'MANUAL_INTERVENTION_BROKEN_URL', 'ASSOCIATED_WITH_RETURN_PICKUP', 'UNSERVICEABLE')")
        return value

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> OrderDeliveryStatus:
        """Create an instance of OrderDeliveryStatus from a JSON string"""
        return cls.from_dict(json.loads(json_str))
    
    @classmethod
    def from_json_for_one_of(cls, json_str: str) -> OrderDeliveryStatus:
        """Create an instance of OrderDeliveryStatus from a JSON string"""
        temp_dict = json.loads(json_str)
        if "status, reason" in temp_dict.keys():
            return cls.from_dict(json.loads(json_str))
        return None

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> OrderDeliveryStatus:
        """Create an instance of OrderDeliveryStatus from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return OrderDeliveryStatus.parse_obj(obj)

        _obj = OrderDeliveryStatus.parse_obj({
            "status": obj.get("status"),
            "reason": obj.get("reason")
        })
        return _obj


