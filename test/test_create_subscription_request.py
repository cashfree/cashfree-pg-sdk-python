# coding: utf-8

"""
    Cashfree Payment Gateway APIs

    Cashfree's Payment Gateway APIs provide developers with a streamlined pathway to integrate advanced payment processing capabilities into their applications, platforms and websites.

    The version of the OpenAPI document: 2023-08-01
    Contact: developers@cashfree.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

import cashfree_pg
from cashfree_pg.models.create_subscription_request import CreateSubscriptionRequest  # noqa: E501
from cashfree_pg.rest import ApiException

class TestCreateSubscriptionRequest(unittest.TestCase):
    """CreateSubscriptionRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test CreateSubscriptionRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateSubscriptionRequest`
        """
        model = cashfree_pg.models.create_subscription_request.CreateSubscriptionRequest()  # noqa: E501
        if include_optional :
            return CreateSubscriptionRequest(
                subscription_id = '0', 
                customer_details = {"customer_name":"Test Cust","customer_email":"test@gmail.com","customer_phone":"9900755700","customer_bank_holder_name":"","customer_bank_account_holder_name":"","customer_bank_ifsc":"","customer_bank_code":"","customer_bank_account_type":""}, 
                plan_details = cashfree_pg.models.create_subscription_request_plan_details.CreateSubscriptionRequest_plan_details(
                    plan_id = '', 
                    plan_name = '', 
                    plan_type = '', 
                    plan_currency = '', 
                    plan_amount = 1.337, 
                    plan_max_amount = 1.337, 
                    plan_max_cycles = 56, 
                    plan_intervals = 56, 
                    plan_interval_type = '', 
                    plan_note = '', ), 
                authorization_details = cashfree_pg.models.create_subscription_request_authorization_details.CreateSubscriptionRequest_authorization_details(
                    authorization_amount = 1.337, 
                    authorization_amount_refund = True, ), 
                subscription_meta = cashfree_pg.models.create_subscription_request_subscription_meta.CreateSubscriptionRequest_subscription_meta(
                    return_url = '', 
                    notification_channel = [
                        ''
                        ], ), 
                subscription_expiry_time = '', 
                subscription_first_charge_time = '', 
                subscription_note = '', 
                subscription_tags = None, 
                subscription_payment_splits = [
                    {"vendor_id":"123","percentage":12.05}
                    ]
            )
        else :
            return CreateSubscriptionRequest(
                subscription_id = '0',
                customer_details = {"customer_name":"Test Cust","customer_email":"test@gmail.com","customer_phone":"9900755700","customer_bank_holder_name":"","customer_bank_account_holder_name":"","customer_bank_ifsc":"","customer_bank_code":"","customer_bank_account_type":""},
                plan_details = cashfree_pg.models.create_subscription_request_plan_details.CreateSubscriptionRequest_plan_details(
                    plan_id = '', 
                    plan_name = '', 
                    plan_type = '', 
                    plan_currency = '', 
                    plan_amount = 1.337, 
                    plan_max_amount = 1.337, 
                    plan_max_cycles = 56, 
                    plan_intervals = 56, 
                    plan_interval_type = '', 
                    plan_note = '', ),
        )
        """

    def testCreateSubscriptionRequest(self):
        """Test CreateSubscriptionRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
