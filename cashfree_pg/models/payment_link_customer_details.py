# coding: utf-8

"""
    Cashfree Payment Gateway APIs

    Cashfree's Payment Gateway APIs provide developers with a streamlined pathway to integrate advanced payment processing capabilities into their applications, platforms and websites.

    The version of the OpenAPI document: 2022-09-01
    Contact: developers@cashfree.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import Optional, Union
from pydantic import BaseModel, Field, StrictFloat, StrictInt, StrictStr, constr

class PaymentLinkCustomerDetails(BaseModel):
    """
    The customer details that are necessary. Note that you can pass dummy details if your use case does not require the customer details.
    """
    customer_id: Optional[constr(strict=True, max_length=50, min_length=3)] = Field(None, description="A unique identifier for the customer. Use alphanumeric values only.")
    customer_email: Optional[constr(strict=True, max_length=100, min_length=3)] = Field(None, description="Customer email address.")
    customer_phone: constr(strict=True, max_length=10, min_length=10) = Field(..., description="Customer phone number.")
    customer_name: Optional[constr(strict=True, max_length=100, min_length=3)] = Field(None, description="Name of the customer.")
    customer_bank_account_number: Optional[constr(strict=True, max_length=20, min_length=3)] = Field(None, description="Customer bank account. Required if you want to do a bank account check (TPV)")
    customer_bank_ifsc: Optional[StrictStr] = Field(None, description="Customer bank IFSC. Required if you want to do a bank account check (TPV)")
    customer_bank_code: Optional[Union[StrictFloat, StrictInt]] = Field(None, description="Customer bank code. Required for net banking payments, if you want to do a bank account check (TPV)")
    __properties = ["customer_id", "customer_email", "customer_phone", "customer_name", "customer_bank_account_number", "customer_bank_ifsc", "customer_bank_code"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> PaymentLinkCustomerDetails:
        """Create an instance of PaymentLinkCustomerDetails from a JSON string"""
        return cls.from_dict(json.loads(json_str))
    
    @classmethod
    def from_json_for_one_of(cls, json_str: str) -> PaymentLinkCustomerDetails:
        """Create an instance of PaymentLinkCustomerDetails from a JSON string"""
        if "CodegenProperty{openApiType&#x3D;&#39;string&#39;, baseName&#x3D;&#39;customer_id&#39;, complexType&#x3D;&#39;null&#39;, getter&#x3D;&#39;getCustomerId&#39;, setter&#x3D;&#39;setCustomerId&#39;, description&#x3D;&#39;A unique identifier for the customer. Use alphanumeric values only.&#39;, dataType&#x3D;&#39;str&#39;, datatypeWithEnum&#x3D;&#39;str&#39;, dataFormat&#x3D;&#39;null&#39;, name&#x3D;&#39;customer_id&#39;, min&#x3D;&#39;null&#39;, max&#x3D;&#39;null&#39;, defaultValue&#x3D;&#39;null&#39;, defaultValueWithParam&#x3D;&#39; &#x3D; data.customer_id;&#39;, baseType&#x3D;&#39;str&#39;, containerType&#x3D;&#39;null&#39;, containerTypeMapped&#x3D;&#39;null&#39;, title&#x3D;&#39;null&#39;, unescapedDescription&#x3D;&#39;A unique identifier for the customer. Use alphanumeric values only.&#39;, maxLength&#x3D;50, minLength&#x3D;3, pattern&#x3D;&#39;null&#39;, example&#x3D;&#39;&#39;012&#39;&#39;, jsonSchema&#x3D;&#39;{
  &quot;maxLength&quot; : 50,
  &quot;minLength&quot; : 3,
  &quot;type&quot; : &quot;string&quot;,
  &quot;description&quot; : &quot;A unique identifier for the customer. Use alphanumeric values only.&quot;
}&#39;, minimum&#x3D;&#39;null&#39;, maximum&#x3D;&#39;null&#39;, exclusiveMinimum&#x3D;false, exclusiveMaximum&#x3D;false, required&#x3D;false, deprecated&#x3D;false, hasMoreNonReadOnly&#x3D;false, isPrimitiveType&#x3D;true, isModel&#x3D;false, isContainer&#x3D;false, isString&#x3D;true, isNumeric&#x3D;false, isInteger&#x3D;false, isShort&#x3D;false, isLong&#x3D;false, isUnboundedInteger&#x3D;false, isNumber&#x3D;false, isFloat&#x3D;false, isDouble&#x3D;false, isDecimal&#x3D;false, isByteArray&#x3D;false, isBinary&#x3D;false, isFile&#x3D;false, isBoolean&#x3D;false, isDate&#x3D;false, isDateTime&#x3D;false, isUuid&#x3D;false, isUri&#x3D;false, isEmail&#x3D;false, isPassword&#x3D;false, isFreeFormObject&#x3D;false, isArray&#x3D;false, isMap&#x3D;false, isEnum&#x3D;false, isInnerEnum&#x3D;false, isEnumRef&#x3D;false, isAnyType&#x3D;false, isReadOnly&#x3D;false, isWriteOnly&#x3D;false, isNullable&#x3D;false, isSelfReference&#x3D;false, isCircularReference&#x3D;false, isDiscriminator&#x3D;false, isNew&#x3D;false, isOverridden&#x3D;null, _enum&#x3D;null, allowableValues&#x3D;null, items&#x3D;null, additionalProperties&#x3D;null, vars&#x3D;[], requiredVars&#x3D;[], mostInnerItems&#x3D;null, vendorExtensions&#x3D;{}, hasValidation&#x3D;true, isInherited&#x3D;false, discriminatorValue&#x3D;&#39;null&#39;, nameInCamelCase&#x3D;&#39;CustomerId&#39;, nameInSnakeCase&#x3D;&#39;CUSTOMER_ID&#39;, enumName&#x3D;&#39;null&#39;, maxItems&#x3D;null, minItems&#x3D;null, maxProperties&#x3D;null, minProperties&#x3D;null, uniqueItems&#x3D;false, uniqueItemsBoolean&#x3D;null, multipleOf&#x3D;null, isXmlAttribute&#x3D;false, xmlPrefix&#x3D;&#39;null&#39;, xmlName&#x3D;&#39;null&#39;, xmlNamespace&#x3D;&#39;null&#39;, isXmlWrapped&#x3D;false, isNull&#x3D;false, isVoid&#x3D;false, getAdditionalPropertiesIsAnyType&#x3D;false, getHasVars&#x3D;false, getHasRequired&#x3D;false, getHasDiscriminatorWithNonEmptyMapping&#x3D;false, composedSchemas&#x3D;null, hasMultipleTypes&#x3D;false, requiredVarsMap&#x3D;null, ref&#x3D;null, schemaIsFromAdditionalProperties&#x3D;false, isBooleanSchemaTrue&#x3D;false, isBooleanSchemaFalse&#x3D;false, format&#x3D;null, dependentRequired&#x3D;null, contains&#x3D;null}" not in json_str:
            return None
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> PaymentLinkCustomerDetails:
        """Create an instance of PaymentLinkCustomerDetails from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return PaymentLinkCustomerDetails.parse_obj(obj)

        _obj = PaymentLinkCustomerDetails.parse_obj({
            "customer_id": obj.get("customer_id"),
            "customer_email": obj.get("customer_email"),
            "customer_phone": obj.get("customer_phone"),
            "customer_name": obj.get("customer_name"),
            "customer_bank_account_number": obj.get("customer_bank_account_number"),
            "customer_bank_ifsc": obj.get("customer_bank_ifsc"),
            "customer_bank_code": obj.get("customer_bank_code")
        })
        return _obj


